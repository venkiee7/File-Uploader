{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jajuv\\\\OneDrive\\\\Documents\\\\React File Uploader\\\\Nodejs_Mongodb_Express_Multer-main\\\\clientproject\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // import FileUploadScreen from './screens/FileUploadScreen';\n\nimport Navbar from './screens/Navbar'; // import { getSingleFiles } from './data/api';\n\nimport Home from './screens/Home';\nimport Alert from './screens/Alert';\nimport About from './screens/About';\nimport Signup from './screens/Signup';\nimport Login from './screens/Login';\nimport Diseases from './screens/Diseases';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [singleFiles, setSingleFiles] = useState([]);\n  // const [multipleFiles, setMultipleFiles] = useState([]);\n  // const getSingleFileslist = async () => {\n  //   try {\n  //     const fileslist = await getSingleFiles();\n  //     setSingleFiles(fileslist);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // const getMultipleFilesList = async () => {\n  //   try {\n  //       const fileslist = await getMultipleFiles();\n  //       setMultipleFiles(fileslist);\n  //       console.log(multipleFiles);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // useEffect(() => {\n  //   getSingleFileslist();\n  // }, []);\n  const [alert, setAlert] = useState(null);\n  const [mode, setMode] = useState('light');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\"); // document.title = 'TextUtils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\"); // document.title = 'TextUtils - Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              showAlert: showAlert,\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/disease\",\n            children: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              showAlert: showAlert,\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Signup, {\n              showAlert: showAlert,\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3PANcZUkwn4FInWWHvNniS2W3SU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jajuv/OneDrive/Documents/React File Uploader/Nodejs_Mongodb_Express_Multer-main/clientproject/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Navbar","Home","Alert","About","Signup","Login","Diseases","App","alert","setAlert","mode","setMode","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n// import FileUploadScreen from './screens/FileUploadScreen';\nimport Navbar from './screens/Navbar';\n// import { getSingleFiles } from './data/api';\nimport Home from './screens/Home';\nimport Alert from './screens/Alert';\nimport About from './screens/About';\nimport Signup from './screens/Signup';\nimport Login from './screens/Login';\nimport Diseases from './screens/Diseases';\n\nfunction App() {\n  // const [singleFiles, setSingleFiles] = useState([]);\n  // const [multipleFiles, setMultipleFiles] = useState([]);\n\n  // const getSingleFileslist = async () => {\n  //   try {\n  //     const fileslist = await getSingleFiles();\n  //     setSingleFiles(fileslist);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // const getMultipleFilesList = async () => {\n  //   try {\n  //       const fileslist = await getMultipleFiles();\n  //       setMultipleFiles(fileslist);\n  //       console.log(multipleFiles);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // useEffect(() => {\n  //   getSingleFileslist();\n  // }, []);\n\n  const [alert, setAlert] = useState(null);\n  const [mode, setMode] = useState('light');\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home showAlert={showAlert} mode={mode} />\n            </Route>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/disease\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/login\">\n              <Login showAlert={showAlert} mode={mode}/>\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup showAlert={showAlert} mode={mode}/>\n            </Route>\n        </Switch>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}