{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jajuv\\\\OneDrive\\\\Documents\\\\React File Uploader\\\\Nodejs_Mongodb_Express_Multer-main\\\\clientproject\\\\src\\\\screens\\\\FileUploadScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { singleFileUpload } from '../data/api';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUploadScreen = props => {\n  _s();\n\n  const [singleFile, setSingleFile] = useState(''); // const [multipleFiles, setMultipleFiles] = useState('');\n  // const [title, setTitle] =  useState('');\n\n  const [singleProgress, setSingleProgress] = useState(0); // const [multipleProgress, setMultipleProgress] = useState(0);\n\n  const SingleFileChange = e => {\n    setSingleFile(e.target.files[0]);\n    setSingleProgress(0);\n  }; // const MultipleFileChange = (e) => {\n  //     setMultipleFiles(e.target.files);\n  //     setMultipleProgress(0);\n  // }\n\n\n  const singleFileOptions = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setSingleProgress(percentage);\n    }\n  }; // const mulitpleFileOptions = {\n  //     onUploadProgress: (progressEvent) => {\n  //         const {loaded, total} = progressEvent;\n  //         const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n  //         setMultipleProgress(percentage);\n  //     }\n  // }\n\n  const uploadSingleFile = async () => {\n    const formData = new FormData();\n    formData.append('file', singleFile);\n    await singleFileUpload(formData, singleFileOptions);\n    props.getsingle();\n  }; // const UploadMultipleFiles = async () => {\n  //     const formData = new FormData();\n  //     formData.append('title', title);\n  //     for (let i = 0; i < multipleFiles.length; i++) {\n  //         formData.append('files', multipleFiles[i]);                      \n  //     }\n  //     await multipleFilesUpload(formData, mulitpleFileOptions);\n  //     props.getMultiple();\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Single File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: e => SingleFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => uploadSingleFile(),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: singleProgress,\n            text: `${singleProgress}%`,\n            styles: buildStyles({\n              rotation: 0.25,\n              strokeLinecap: 'butt',\n              textSize: '16px',\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n              textColor: '#f88',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUploadScreen, \"WnEYkzLHi/eP/F/CM/1kfOBRmRE=\");\n\n_c = FileUploadScreen;\nexport default FileUploadScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadScreen\");","map":{"version":3,"sources":["C:/Users/jajuv/OneDrive/Documents/React File Uploader/Nodejs_Mongodb_Express_Multer-main/clientproject/src/screens/FileUploadScreen.js"],"names":["React","useState","singleFileUpload","CircularProgressbar","buildStyles","FileUploadScreen","props","singleFile","setSingleFile","singleProgress","setSingleProgress","SingleFileChange","e","target","files","singleFileOptions","onUploadProgress","progressEvent","loaded","total","percentage","Math","floor","uploadSingleFile","formData","FormData","append","getsingle","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport {singleFileUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\nconst FileUploadScreen = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    // const [multipleFiles, setMultipleFiles] = useState('');\n    // const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    // const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    // const MultipleFileChange = (e) => {\n    //     setMultipleFiles(e.target.files);\n    //     setMultipleProgress(0);\n    // }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    // const mulitpleFileOptions = {\n    //     onUploadProgress: (progressEvent) => {\n    //         const {loaded, total} = progressEvent;\n    //         const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n    //         setMultipleProgress(percentage);\n    //     }\n    // }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n    // const UploadMultipleFiles = async () => {\n    //     const formData = new FormData();\n    //     formData.append('title', title);\n    //     for (let i = 0; i < multipleFiles.length; i++) {\n    //         formData.append('files', multipleFiles[i]);                      \n    //     }\n    //     await multipleFilesUpload(formData, mulitpleFileOptions);\n    //     props.getMultiple();\n    // }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"form-group\">\n                    <label>Select Single File</label>\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                    </div>\n                    <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={singleProgress}\n                            text={`${singleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;"]},"metadata":{},"sourceType":"module"}