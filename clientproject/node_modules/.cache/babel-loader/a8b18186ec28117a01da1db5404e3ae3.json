{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jajuv\\\\OneDrive\\\\Documents\\\\React File Uploader\\\\Nodejs_Mongodb_Express_Multer-main\\\\clientproject\\\\src\\\\screens\\\\FileUploadScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { getSingleFiles, singleFileUpload } from '../data/api';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css'; // import fileContext from \"../context/files/fileContext\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUploadScreen = props => {\n  _s();\n\n  // const context = fileContext(fileContext);\n  let history = useHistory();\n  const [singleFile, setSingleFile] = useState(''); // const [multipleFiles, setMultipleFiles] = useState('');\n  // const [title, setTitle] =  useState('');\n\n  const [singleProgress, setSingleProgress] = useState(0); // const [multipleProgress, setMultipleProgress] = useState(0);\n  // useEffect(() => {\n  //     if (localStorage.getItem('token')) {\n  //         getSingleFiles()\n  //     }\n  //     else {\n  //         history.push(\"/login\")\n  //         // eslint-disable-next-lin\n  //     }\n  // }, [])\n\n  const SingleFileChange = e => {\n    setSingleFile(e.target.files[0]);\n    setSingleProgress(0);\n  }; // const MultipleFileChange = (e) => {\n  //     setMultipleFiles(e.target.files);\n  //     setMultipleProgress(0);\n  // }\n\n\n  const singleFileOptions = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setSingleProgress(percentage);\n    }\n  }; // const mulitpleFileOptions = {\n  //     onUploadProgress: (progressEvent) => {\n  //         const {loaded, total} = progressEvent;\n  //         const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n  //         setMultipleProgress(percentage);\n  //     }\n  // }\n\n  const uploadSingleFile = async () => {\n    const formData = new FormData();\n    formData.append('file', singleFile);\n    await singleFileUpload(formData, singleFileOptions);\n    props.getsingle();\n  };\n\n  const [singleFiles, setSingleFiles] = useState([]);\n\n  const getSingleFileslist = async () => {\n    try {\n      const fileslist = await getSingleFiles();\n      setSingleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getSingleFileslist();\n  }, []); // const UploadMultipleFiles = async () => {\n  //     const formData = new FormData();\n  //     formData.append('title', title);\n  //     for (let i = 0; i < multipleFiles.length; i++) {\n  //         formData.append('files', multipleFiles[i]);                      \n  //     }\n  //     await multipleFilesUpload(formData, mulitpleFileOptions);\n  //     props.getMultiple();\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Single File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: e => SingleFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => uploadSingleFile(),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: singleProgress,\n            text: `${singleProgress}%`,\n            styles: buildStyles({\n              rotation: 0.25,\n              strokeLinecap: 'butt',\n              textSize: '16px',\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n              textColor: '#f88',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-success font-weight-bold\",\n                children: \"Single Files List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: singleFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card mb-2 border-0 p-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `http://localhost:8080/${file.filePath}`,\n                      height: \"200\",\n                      className: \"card-img-top img-responsive\",\n                      alt: \"img\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUploadScreen, \"8ufMj0An0+W5VDwBy6YcJWrCBHI=\", false, function () {\n  return [useHistory];\n});\n\n_c = FileUploadScreen;\nexport default FileUploadScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadScreen\");","map":{"version":3,"sources":["C:/Users/jajuv/OneDrive/Documents/React File Uploader/Nodejs_Mongodb_Express_Multer-main/clientproject/src/screens/FileUploadScreen.js"],"names":["React","useState","useEffect","useHistory","getSingleFiles","singleFileUpload","CircularProgressbar","buildStyles","FileUploadScreen","props","history","singleFile","setSingleFile","singleProgress","setSingleProgress","SingleFileChange","e","target","files","singleFileOptions","onUploadProgress","progressEvent","loaded","total","percentage","Math","floor","uploadSingleFile","formData","FormData","append","getsingle","singleFiles","setSingleFiles","getSingleFileslist","fileslist","error","console","log","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","map","file","index","filePath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { getSingleFiles, singleFileUpload } from '../data/api';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n// import fileContext from \"../context/files/fileContext\"\n\n\nconst FileUploadScreen = (props) => {\n    // const context = fileContext(fileContext);\n    let history = useHistory();\n    const [singleFile, setSingleFile] = useState('');\n    // const [multipleFiles, setMultipleFiles] = useState('');\n    // const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    // const [multipleProgress, setMultipleProgress] = useState(0);\n    // useEffect(() => {\n    //     if (localStorage.getItem('token')) {\n    //         getSingleFiles()\n    //     }\n    //     else {\n    //         history.push(\"/login\")\n    //         // eslint-disable-next-lin\n    //     }\n    // }, [])\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    // const MultipleFileChange = (e) => {\n    //     setMultipleFiles(e.target.files);\n    //     setMultipleProgress(0);\n    // }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const { loaded, total } = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    // const mulitpleFileOptions = {\n    //     onUploadProgress: (progressEvent) => {\n    //         const {loaded, total} = progressEvent;\n    //         const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n    //         setMultipleProgress(percentage);\n    //     }\n    // }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n\n    const [singleFiles, setSingleFiles] = useState([]);\n\n    const getSingleFileslist = async () => {\n      try {\n        const fileslist = await getSingleFiles();\n        setSingleFiles(fileslist);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n    useEffect(() => {\n      getSingleFileslist();\n    }, []);\n    // const UploadMultipleFiles = async () => {\n    //     const formData = new FormData();\n    //     formData.append('title', title);\n    //     for (let i = 0; i < multipleFiles.length; i++) {\n    //         formData.append('files', multipleFiles[i]);                      \n    //     }\n    //     await multipleFilesUpload(formData, mulitpleFileOptions);\n    //     props.getMultiple();\n    // }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"form-group\">\n                    <label>Select Single File</label>\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                    </div>\n                    <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={singleProgress}\n                            text={`${singleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <h4 className=\"text-success font-weight-bold\">Single Files List</h4>\n                                <div className=\"row\">\n                                    {singleFiles.map((file, index) =>\n                                        <div className=\"col-6\">\n                                            <div className=\"card mb-2 border-0 p-0\">\n                                                <img src={`http://localhost:8080/${file.filePath}`} height=\"200\" className=\"card-img-top img-responsive\" alt=\"img\" />\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;"]},"metadata":{},"sourceType":"module"}