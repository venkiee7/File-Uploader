{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jajuv\\\\Downloads\\\\Nodejs_Mongodb_Express_Multer-main (1)\\\\Nodejs_Mongodb_Express_Multer-main\\\\clientproject\\\\src\\\\screens\\\\FileUploadScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { singleFileUpload, multipleFilesUpload } from '../data/api';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUploadScreen = props => {\n  _s();\n\n  const [singleFile, setSingleFile] = useState('');\n  const [multipleFiles, setMultipleFiles] = useState('');\n  const [title, setTitle] = useState('');\n  const [singleProgress, setSingleProgress] = useState(0);\n  const [multipleProgress, setMultipleProgress] = useState(0);\n\n  const SingleFileChange = e => {\n    setSingleFile(e.target.files[0]);\n    setSingleProgress(0);\n  };\n\n  const MultipleFileChange = e => {\n    setMultipleFiles(e.target.files);\n    setMultipleProgress(0);\n  };\n\n  const singleFileOptions = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setSingleProgress(percentage);\n    }\n  };\n  const mulitpleFileOptions = {\n    onUploadProgress: progressEvent => {\n      const {\n        loaded,\n        total\n      } = progressEvent;\n      const percentage = Math.floor(loaded / 1000 * 100 / (total / 1000));\n      setMultipleProgress(percentage);\n    }\n  };\n\n  const uploadSingleFile = async () => {\n    const formData = new FormData();\n    formData.append('file', singleFile);\n    await singleFileUpload(formData, singleFileOptions);\n    props.getsingle();\n  };\n\n  const UploadMultipleFiles = async () => {\n    const formData = new FormData();\n    formData.append('title', title);\n\n    for (let i = 0; i < multipleFiles.length; i++) {\n      formData.append('files', multipleFiles[i]);\n    }\n\n    await multipleFilesUpload(formData, mulitpleFileOptions);\n    props.getMultiple();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Single File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: e => SingleFileChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => uploadSingleFile(),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: singleProgress,\n            text: `${singleProgress}%`,\n            styles: buildStyles({\n              rotation: 0.25,\n              strokeLinecap: 'butt',\n              textSize: '16px',\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n              textColor: '#f88',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"enter title for your gallery\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Multiple Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => MultipleFileChange(e),\n              className: \"form-control\",\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => UploadMultipleFiles(),\n            className: \"btn btn-danger\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: multipleProgress,\n            text: `${multipleProgress}%`,\n            styles: buildStyles({\n              rotation: 0.25,\n              strokeLinecap: 'butt',\n              textSize: '16px',\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n              textColor: '#f88',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUploadScreen, \"tdRb0wvxL6RgAZ6zkPpo+0t09Mo=\");\n\n_c = FileUploadScreen;\nexport default FileUploadScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadScreen\");","map":{"version":3,"sources":["C:/Users/jajuv/Downloads/Nodejs_Mongodb_Express_Multer-main (1)/Nodejs_Mongodb_Express_Multer-main/clientproject/src/screens/FileUploadScreen.js"],"names":["React","useState","useEffect","singleFileUpload","multipleFilesUpload","CircularProgressbar","buildStyles","FileUploadScreen","props","singleFile","setSingleFile","multipleFiles","setMultipleFiles","title","setTitle","singleProgress","setSingleProgress","multipleProgress","setMultipleProgress","SingleFileChange","e","target","files","MultipleFileChange","singleFileOptions","onUploadProgress","progressEvent","loaded","total","percentage","Math","floor","mulitpleFileOptions","uploadSingleFile","formData","FormData","append","getsingle","UploadMultipleFiles","i","length","getMultiple","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,QAAoD,aAApD;AACA,SAAQC,mBAAR,EAA6BC,WAA7B,QAA+C,4BAA/C;AACA,OAAO,4CAAP;;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAqBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACgB,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMkB,gBAAgB,GAAIC,CAAD,IAAO;AAC5BV,IAAAA,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAb;AACAN,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACH,GAHD;;AAIA,QAAMO,kBAAkB,GAAIH,CAAD,IAAO;AAC9BR,IAAAA,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACAJ,IAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACH,GAHD;;AAIA,QAAMM,iBAAiB,GAAG;AACtBC,IAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAkBF,aAAxB;AACA,YAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAaJ,MAAM,GAAG,IAAV,GAAkB,GAAnB,IAA2BC,KAAK,GAAG,IAAnC,CAAX,CAAnB;AACAZ,MAAAA,iBAAiB,CAACa,UAAD,CAAjB;AACH;AALqB,GAA1B;AAOA,QAAMG,mBAAmB,GAAG;AACxBP,IAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAkBF,aAAxB;AACA,YAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAaJ,MAAM,GAAG,IAAV,GAAkB,GAAnB,IAA2BC,KAAK,GAAG,IAAnC,CAAX,CAAnB;AACAV,MAAAA,mBAAmB,CAACW,UAAD,CAAnB;AACH;AALuB,GAA5B;;AAOA,QAAMI,gBAAgB,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3B,UAAxB;AACA,UAAMN,gBAAgB,CAAC+B,QAAD,EAAWV,iBAAX,CAAtB;AACAhB,IAAAA,KAAK,CAAC6B,SAAN;AACH,GALD;;AAMA,QAAMC,mBAAmB,GAAG,YAAY;AACpC,UAAMJ,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBvB,KAAzB;;AACA,SAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,aAAa,CAAC6B,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CL,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBzB,aAAa,CAAC4B,CAAD,CAAtC;AACH;;AACD,UAAMnC,mBAAmB,CAAC8B,QAAD,EAAWF,mBAAX,CAAzB;AACAxB,IAAAA,KAAK,CAACiC,WAAN;AACH,GARD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,QAAQ,EAAGrB,CAAD,IAAOD,gBAAgB,CAACC,CAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,gBAAhC;AAAiD,YAAA,OAAO,EAAE,MAAMa,gBAAgB,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI,QAAC,mBAAD;AACI,YAAA,KAAK,EAAElB,cADX;AAEI,YAAA,IAAI,EAAG,GAAEA,cAAe,GAF5B;AAGI,YAAA,MAAM,EAAET,WAAW,CAAC;AAChBoC,cAAAA,QAAQ,EAAE,IADM;AAEhBC,cAAAA,aAAa,EAAE,MAFC;AAGhBC,cAAAA,QAAQ,EAAE,MAHM;AAIhBC,cAAAA,sBAAsB,EAAE,GAJR;AAKhBC,cAAAA,SAAS,EAAG,uBAAsB/B,cAAc,GAAG,GAAI,GALvC;AAMhBgC,cAAAA,SAAS,EAAE,MANK;AAOhBC,cAAAA,UAAU,EAAE,SAPI;AAQhBC,cAAAA,eAAe,EAAE;AARD,aAAD;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA4BI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAG7B,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAAS6B,KAAV,CAA5C;AAA+D,YAAA,WAAW,EAAC,8BAA3E;AAA0G,YAAA,SAAS,EAAC;AAApH;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,QAAQ,EAAG9B,CAAD,IAAOG,kBAAkB,CAACH,CAAD,CAAtD;AAA2D,cAAA,SAAS,EAAC,cAArE;AAAoF,cAAA,QAAQ;AAA5F;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAaQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMkB,mBAAmB,EAAxD;AAA6D,YAAA,SAAS,EAAC,gBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACA,QAAC,mBAAD;AACI,YAAA,KAAK,EAAErB,gBADX;AAEI,YAAA,IAAI,EAAG,GAAEA,gBAAiB,GAF9B;AAGI,YAAA,MAAM,EAAEX,WAAW,CAAC;AAChBoC,cAAAA,QAAQ,EAAE,IADM;AAEhBC,cAAAA,aAAa,EAAE,MAFC;AAGhBC,cAAAA,QAAQ,EAAE,MAHM;AAIhBC,cAAAA,sBAAsB,EAAE,GAJR;AAKhBC,cAAAA,SAAS,EAAG,uBAAsB7B,gBAAgB,GAAG,GAAI,GALzC;AAMhB8B,cAAAA,SAAS,EAAE,MANK;AAOhBC,cAAAA,UAAU,EAAE,SAPI;AAQhBC,cAAAA,eAAe,EAAE;AARD,aAAD;AAHvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH,CA9GD;;GAAM1C,gB;;KAAAA,gB;AAgHN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {singleFileUpload, multipleFilesUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\nconst FileUploadScreen = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    const [multipleFiles, setMultipleFiles] = useState('');\n    const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    const MultipleFileChange = (e) => {\n        setMultipleFiles(e.target.files);\n        setMultipleProgress(0);\n    }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    const mulitpleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setMultipleProgress(percentage);\n        }\n    }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n    const UploadMultipleFiles = async () => {\n        const formData = new FormData();\n        formData.append('title', title);\n        for (let i = 0; i < multipleFiles.length; i++) {\n            formData.append('files', multipleFiles[i]);                      \n        }\n        await multipleFilesUpload(formData, mulitpleFileOptions);\n        props.getMultiple();\n    }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"form-group\">\n                    <label>Select Single File</label>\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                    </div>\n                    <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={singleProgress}\n                            text={`${singleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                   <div className=\"row\">\n                       <div className=\"col-6\">\n                            <label >Title</label>\n                            <input type=\"text\" onChange={(e) => setTitle(e.target.value) } placeholder=\"enter title for your gallery\" className=\"form-control\"/>\n                       </div>\n                       <div className=\"col-6\">\n                        <div className=\"form-group\">\n                            <label>Select Multiple Files</label>\n                            <input type=\"file\" onChange={(e) => MultipleFileChange(e)} className=\"form-control\" multiple />\n                        </div>\n                       </div>\n                   </div>                   \n                    <div className=\"row\">\n                        <div className=\"col-10\">\n                            <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-danger\">Upload</button>\n                        </div>\n                        <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={multipleProgress}\n                            text={`${multipleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                    </div>\n                </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;"]},"metadata":{},"sourceType":"module"}